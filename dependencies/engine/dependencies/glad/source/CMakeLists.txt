cmake_minimum_required(VERSION 3.0)
project(Glad)

set(OpenGL_GL_PREFERENCE "GLVND")
find_package(OpenGL REQUIRED)

add_library(glad STATIC "include/glad/glad.h" "src/glad.c")
target_include_directories(glad PUBLIC "include")

target_link_libraries(glad 
    PUBLIC ${OPENGL_LIBRARIES}
)

# Read SDL2 version
if(SDL2_INCLUDE_DIR AND EXISTS "${SDL2_INCLUDE_DIR}/SDL_version.h")
  file(STRINGS "include/glad/glad.h" GLAD_VERSION_LINE REGEX "^[ \t]+OpenGL loader generated by glad [0-9.]*")
  string(REGEX REPLACE "^[ \t]+OpenGL loader generated by glad ([0-9.]*)(.*)" "\\1" GLAD_VERSION "${GLAD_VERSION_LINE}")
  message(STATUS "GLAD_VERSION: ${GLAD_VERSION}")
#   file(STRINGS "${SDL2_INCLUDE_DIR}/SDL_version.h" SDL2_VERSION_MINOR_LINE REGEX "^#define[ \t]+SDL_MINOR_VERSION[ \t]+[0-9]+$")
#   file(STRINGS "${SDL2_INCLUDE_DIR}/SDL_version.h" SDL2_VERSION_PATCH_LINE REGEX "^#define[ \t]+SDL_PATCHLEVEL[ \t]+[0-9]+$")
#   string(REGEX REPLACE "^#define[ \t]+SDL_MAJOR_VERSION[ \t]+([0-9]+)$" "\\1" SDL2_VERSION_MAJOR "${SDL2_VERSION_MAJOR_LINE}")
#   string(REGEX REPLACE "^#define[ \t]+SDL_MINOR_VERSION[ \t]+([0-9]+)$" "\\1" SDL2_VERSION_MINOR "${SDL2_VERSION_MINOR_LINE}")
#   string(REGEX REPLACE "^#define[ \t]+SDL_PATCHLEVEL[ \t]+([0-9]+)$" "\\1" SDL2_VERSION_PATCH "${SDL2_VERSION_PATCH_LINE}")
#   set(SDL2_VERSION_STRING ${SDL2_VERSION_MAJOR}.${SDL2_VERSION_MINOR}.${SDL2_VERSION_PATCH})
#   unset(SDL2_VERSION_MAJOR_LINE)
#   unset(SDL2_VERSION_MINOR_LINE)
#   unset(SDL2_VERSION_PATCH_LINE)
#   unset(SDL2_VERSION_MAJOR)
#   unset(SDL2_VERSION_MINOR)
#   unset(SDL2_VERSION_PATCH)
endif()
